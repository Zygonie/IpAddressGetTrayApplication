<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:IpAddressGetTrayApplication">

    <ResourceDictionary.MergedDictionaries >
        <ResourceDictionary Source="ColorResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>



    <BooleanToVisibilityConverter x:Key="BoolToVis" />

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="#FFC1C1C1"
                            BorderThickness="1" 
                            Background="#FF2D2D30"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">        
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border 
                        Name="Border"
                        Background="{StaticResource LightBackground}"
                        BorderBrush="{StaticResource LightBackground}"
                        BorderThickness="1" >
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="ContextMenuItemStyle">
        <Setter Property="MenuItem.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">                    
                    <Border HorizontalAlignment="Stretch" x:Name="RootBorder" BorderThickness="2" Background="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColIcon" Width="36"></ColumnDefinition>
                                <ColumnDefinition x:Name="ColHeader" MinWidth="130" Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    x:Name="Icon"        
                                    Grid.Column="0">
                                <Image Width="32" Height="32" Margin="1" 
                                       Source="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}">
                                </Image>
                            </Border>
                            <Border Grid.Column="1" x:Name="HeaderBorder" 
                                    HorizontalAlignment="Stretch" Padding="3,0,2,0">
                                <TextBlock Text="{TemplateBinding MenuItem.Header}" 
                                         x:Name="HeaderText" 
                                         Foreground="{StaticResource Foreground}" 
                                         FontSize="16"
                                         VerticalAlignment="Center" 
                                         HorizontalAlignment="Stretch" 
                                         Margin="2,0,0,0" />
                            </Border>
                            <Border x:Name="DisabledOverlay" 
                                    HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    Grid.Column="0" Grid.ColumnSpan="2" 
                                    Background="{StaticResource LightBackground}" 
                                    Opacity="0" >
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="RootBorder">
                            <Trigger.Setters>
                                <Setter TargetName="RootBorder" Property="Background" Value="{StaticResource MenuItemHighlightedBackground}"/>
                                <Setter TargetName="RootBorder" Property="BorderBrush" Value="{StaticResource BorderBrushSelected}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" SourceName="RootBorder">
                            <Trigger.Setters>
                                <Setter Property="Opacity" 
                                        TargetName="DisabledOverlay" 
                                        Value="0.7" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter Property="MinWidth" Value="0" TargetName="ColIcon" />
                            <Setter Property="Width" Value="0" TargetName="ColIcon" />
                            <Setter Property="MinWidth" Value="166" TargetName="ColHeader" />
                            <Setter Property="TextAlignment" Value="Center" TargetName="HeaderText"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu" Style="{StaticResource ContextMenuStyle}">
        <MenuItem Style="{StaticResource ContextMenuItemStyle}"
                  IsEnabled="False"
                  Header="{Binding CurrentIP}" />
        <Separator Background="#FF2D2D30"/>
        <MenuItem Style="{StaticResource ContextMenuItemStyle}"
                  Header="Send email" 
                  Command="{Binding SendMailCommand}" 
                  Tag="/images/sendMail.png">
        </MenuItem>
        <MenuItem Style="{StaticResource ContextMenuItemStyle}"
                  Header="Check current IP" 
                  Command="{Binding GetIpCommand}" 
                  Tag="/images/ip.png">
        </MenuItem>
        <Separator Background="#FF2D2D30"/>
        <MenuItem Style="{StaticResource ContextMenuItemStyle}"
                  Header="Exit" 
                  Command="{Binding ExitCommand}" 
                  Tag="/images/close.png">
        </MenuItem>
    </ContextMenu>

    <!-- The TaskBar Icon -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/images/iRC_icon.ico"
                    ToolTipText="{Binding CurrentIP, UpdateSourceTrigger=PropertyChanged}"
                    ContextMenu="{StaticResource SysTrayMenu}"
                    Visibility="{Binding Path=IsVisible, Converter={StaticResource BoolToVis}}" >
    </tb:TaskbarIcon>


</ResourceDictionary>